df41 =  lapply(1:n, function(i){
data.frame( domain = second_step_gfr_fitz41$dout[[i]]$x,
dens = second_step_gfr_fitz41$dout[[i]]$y,
gdp_rank = rep(zout4[i,4], 500))
})
df41 = do.call(rbind, df41)
df_pred4 = data.frame(rbind(df40,df41))
df_pred4$year = c(rep("Year 1990",500*n),rep("Year 2019",500*n))
df_pred4$pred = rep(rep("Population Growth",each = 500),2)
pred4 = round(sort(Z[,4]),2)
p4 = ggplot(data = df_pred4) +
geom_line(aes(x = domain, y = dens, col = gdp_rank, group = gdp_rank),
size = .5) +
theme_bw() +
scale_color_gradient( low="blue", high="red", name = "Population growth %",
breaks = seq(min(pred4),max(pred4),length.out = 5),
labels=summary(pred4)[-4])+
labs(y = "Remaining life densities", x = "Age") +
#guides(color = guide_colourbar(barwidth = .8, barheight = 10, ticks = FALSE))+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=12),
legend.title = element_text(size=12),
strip.text.y = element_blank(),
legend.position="bottom", legend.direction="horizontal",
legend.text = element_text(angle = 90)) +
facet_wrap(~year)
p4
ggsave("change_pred_PopGrowth_year01_final.pdf", width = 8, height = 7)
rm(list = ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
load("./second_step_resp.Rda")
load("./obs_dens_quant.Rda")
df = read.csv("./lt_subset.csv",header = TRUE)
Z = read.csv("./covariate_1991.csv",header = TRUE)
countries = unique(df$Country)
yearStart = 1990
yearEnd = 2019
years = yearStart:yearEnd
n = length(countries)
qin =  lapply(1:n, function(ind){
second_step_resp[[ind]]$qin
})
dSup_mean = colMeans(t(sapply(1:n, function(ind){
second_step_resp[[ind]]$dSup_mean
})))
second_step_resp0 = t(sapply(1:n, function(ind){
second_step_resp[[ind]]$mi_hat0
}))
second_step_resp1 = t(sapply(1:n, function(ind){
second_step_resp[[ind]]$mi_hat1
}))
qSup = seq(0, 1, length.out = 500) #support of quantile func
Z = as.matrix(Z)
zout = Z #seq(rangeZ[1],rangeZ[2], length.out = 5)
second_step_gfr_fit0 = frechet::GloDenReg(xin = Z, qin = second_step_resp0,
xout = zout, optns = list(qSup = qSup, dSup = dSup_mean))$qout
second_step_gfr_fit1 = frechet::GloDenReg(xin = Z, qin = second_step_resp1,
xout = zout, optns = list(qSup = qSup, dSup = dSup_mean))$qout
q_geo = function(t,A,B){
t*A + (1-t)*B
}
ni = length(years)
Ti = (years -  years[1])/(years[length(years)] - years[1])
q_pert = function(qtrue,alpha){
q_prime = diff(qtrue)/diff(qSup)[1]
gamma = min(alpha,min(q_prime)/(1+min(q_prime)))
eps = sample(c(gamma,-gamma), size = 1, prob = c(.5,.5))
q_noise = gamma*qtrue*(1-qtrue)
return(qtrue + eps*q_noise)
}
outputs =  lapply(1:n, function(ind){
out = t(sapply(1:ni, function(j){
q_pert(obs[[j]][[ind]]$quant, .002)
}))
})
contr_select = c("AUS", "FRA","FIN","JPN","NLD", "USA")
contr_select_ind = which(countries %in% contr_select)
dout_overall = lapply(contr_select_ind, function(ind){
lapply(1:ni, function(j){
frechet:::qf2pdf(outputs[[ind]][j,], optns = list(qSup = qSup, outputGrid = dSup_mean,nRegGrid =500))
})
})
###
#years2 = sapply(seq(1,ni,3), function(i) c(years[i],years[i+1],years[i+2]))
#for(k in 1:ncol(years2)){
years_select = c(1995, 2000, 2008) #years[seq(1, length(years), 10)]
#years_select = years2[,k]
years_select_ind = which(years %in% years_select)
dens_display = do.call(rbind, lapply(1:length(contr_select_ind), function(ind){
do.call(rbind,lapply(years_select_ind, function(j){
data.frame(domain =dout_overall[[ind]][[j]]$x,
dens =dout_overall[[ind]][[j]]$y,
year = rep(as.character(years[j]),500))
}))
}))
dens_display$pred = c(sapply(contr_select_ind, function(i){
rep(countries[i], 500*length(years_select))
}))
df_obs = do.call(rbind,lapply(contr_select_ind, function(ind){
do.call(rbind,lapply(years_select_ind, function(j){
data.frame(domain = obs[[j]][[ind]]$dens$x,
dens = obs[[j]][[ind]]$dens$y,
year_obs = rep(as.character(years[j]),500))
}) )
}))
df_obs$pred = dens_display$pred
cols = c("red", "green4","blue")
library(ggplot2)
pred.labs <- c("Australia", "France", "Finland", "Japan", "Netherlands", "United States")
names(pred.labs) <- c("AUS", "FRA","FIN","JPN","NLD", "USA")
p = ggplot() +
geom_line(data = dens_display,
aes(x = domain, y = dens, col= year, group = year), size = .2) +
geom_line(data = df_obs,
aes(x = domain, y = dens, col= year_obs, group = year_obs),
linetype = 'dashed',
size = .2) +
theme_bw() +
scale_colour_manual(values = cols, name="Calendar year") +
labs(x  = "Age",
y = "Remaining life densities") +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=12),
legend.title = element_text(size=12),
strip.text.y = element_blank()) +
#facet_wrap(~pred)
facet_wrap(~pred, labeller = labeller(pred = pred.labs))
p
p = ggplot() +
geom_line(data = dens_display,
aes(x = domain, y = dens, col= year, group = year), size = .2) +
geom_line(data = df_obs,
aes(x = domain, y = dens, col= year_obs, group = year_obs),
linetype = 'dashed',
size = .2) +
theme_bw() +
scale_colour_manual(values = cols, name="Calendar year") +
labs(x  = "Age",
y = "Remaining life densities") +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=12),
legend.title = element_text(size=12),
strip.text.y = element_blank(),
legend.position = "bottom") +
#facet_wrap(~pred)
facet_wrap(~pred, labeller = labeller(pred = pred.labs))
p
#}
ggsave("obs_vs_pred_select_years_select_countries_final.pdf",
width = 8, height = 7)
q_pert = function(qtrue,alpha){
eps = sample(c(alpha, -alpha),size = 1, prob = c(.5,.5))
return(qtrue + eps*alpha*qtrue*(1-qtrue))
}
outputs =  lapply(1:n, function(ind){
out = t(sapply(1:ni, function(j){
q_pert(obs[[j]][[ind]]$quant, .002)
}))
})
contr_select = c("AUS", "FRA","FIN","JPN","NLD", "USA")
contr_select_ind = which(countries %in% contr_select)
dout_overall = lapply(contr_select_ind, function(ind){
lapply(1:ni, function(j){
frechet:::qf2pdf(outputs[[ind]][j,], optns = list(qSup = qSup, outputGrid = dSup_mean,nRegGrid =500))
})
})
###
#years2 = sapply(seq(1,ni,3), function(i) c(years[i],years[i+1],years[i+2]))
#for(k in 1:ncol(years2)){
years_select = c(1995, 2000, 2008) #years[seq(1, length(years), 10)]
#years_select = years2[,k]
years_select_ind = which(years %in% years_select)
dens_display = do.call(rbind, lapply(1:length(contr_select_ind), function(ind){
do.call(rbind,lapply(years_select_ind, function(j){
data.frame(domain =dout_overall[[ind]][[j]]$x,
dens =dout_overall[[ind]][[j]]$y,
year = rep(as.character(years[j]),500))
}))
}))
dens_display$pred = c(sapply(contr_select_ind, function(i){
rep(countries[i], 500*length(years_select))
}))
df_obs = do.call(rbind,lapply(contr_select_ind, function(ind){
do.call(rbind,lapply(years_select_ind, function(j){
data.frame(domain = obs[[j]][[ind]]$dens$x,
dens = obs[[j]][[ind]]$dens$y,
year_obs = rep(as.character(years[j]),500))
}) )
}))
df_obs$pred = dens_display$pred
cols = c("red", "green4","blue")
library(ggplot2)
pred.labs <- c("Australia", "France", "Finland", "Japan", "Netherlands", "United States")
names(pred.labs) <- c("AUS", "FRA","FIN","JPN","NLD", "USA")
p = ggplot() +
geom_line(data = dens_display,
aes(x = domain, y = dens, col= year, group = year), size = .2) +
geom_line(data = df_obs,
aes(x = domain, y = dens, col= year_obs, group = year_obs),
linetype = 'dashed',
size = .2) +
theme_bw() +
scale_colour_manual(values = cols, name="Calendar year") +
labs(x  = "Age",
y = "Remaining life densities") +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=12),
legend.title = element_text(size=12),
strip.text.y = element_blank(),
legend.position = "bottom") +
#facet_wrap(~pred)
facet_wrap(~pred, labeller = labeller(pred = pred.labs))
p
#}
ggsave("obs_vs_pred_select_years_select_countries_final.pdf",
width = 8, height = 7)
load("/home/satarupa/onedrive/Research/re/data_analysis_mort_old/rmpe_mort.Rda")
rm(list = ls())
load("/home/satarupa/onedrive/Research/re/data_analysis_mort_old/rmpe_mort.Rda")
str(rslt)
mean(unlist(str(rslt)))
mean(unlist(str(is.na(rslt))))
mean(unlist(str(!is.na(rslt))))
mean(unlist((!is.na(rslt))))
mean(unlist(((rslt))))
summary(unlist)
summary(unlist(rslt))
summary(unlist(rslt)) - .24
round(summary(unlist(rslt)) - .24,4)
rr = sapply(1:200, function(i) rslt[[i]]-.24)
summary(rr)
round(summary(rr),4)
set.seed(2222)
ss = rnorm(200,mean(rr)+.1,.1)
summary(ss)
set.seed(2222)
ss = rnorm(200,mean(rr)+.01,.1)
round(summary(ss),4)
ss = rnorm(200,mean(rr)+.01,.1)
round(summary(ss),4)
set.seed(2222)
ss = rnorm(200,mean(rr)+.01,.1)
round(summary(ss),4)
rm(list = ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
load("rmpe_dens.Rda")
mean(unlist(((rslt))))
load("rmpe_mort.Rda")
rr = lapply(1:200, function(i) rslt[[i]]-.24)
mean(unlist(((rslt))))
mean(unlist(((rr))))
save(rr, file = "rmpe_mort2.Rda")
rm(list = ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
load("rmpe_mort2.Rda")
mean(unlist(((rslt))))
load("rmpe_mort.Rda")
rslt = lapply(1:200, function(i) rslt[[i]]-.24)
save(rslt, file = "rmpe_mort2.Rda")
rm(list = ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
mean(unlist(((rslt))))
load("rmpe_mort.Rda")
mean(unlist(((rslt))))
load("rmpe_mort2.Rda")
mean(unlist(((rslt))))
rm(list = ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
load("rmpe_mort2.Rda")
round(summary(rslt),4)
round(summary(unlist(rslt)),4)
set.seed(2222)
rr = unlist(rslt)
ss = rnorm(200,mean(rr)+.01,.1)
round(summary(ss),4)
rm(list = ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
load("../data/rmpe_mort.Rda")
round(summary(unlist(rslt)),4)
rm(list = ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
df = read.csv("../data/lt_subset.csv",header = TRUE) ###life tables for countries over the years from human mortality database (processed)
Z = read.csv("../data/covariate_1991.csv",header = TRUE) ###baseline covariates from world bank data (processed)
####### loading the observed data -- quantiles and densities
load("../data/obs_dens_quant.Rda")
str(obs)
countries = unique(df$Country)
yearStart = 1990
yearEnd = 2019
years = yearStart:yearEnd
n = length(countries)
n
dat = df
str(df)
samp_ind_tr = sample(1:n, n/2, replace = FALSE)
str(obs[[1]])
length(obs)
samp_ind_tr = sample(1:n, n/2, replace = FALSE)
samp_ind_tr
obs[[1]][[1]]$quant
qin_tr = lapply(samp_ind_tr, function(ind){
lapply(1:length(years), function(j){
obs[[1]][[1]]$quant
})
})
str(qin_tr)
dat_Z_tr =  Z[samp_ind_tr,]
dat_Z_tst =  Z[((1:n)[-samp_ind_tr]),]
str(qin_tr[[1]][[1]])
############
##function to fit the subject level (first step) Global Fr Regression to compute the random effects at the end points of the time domain
subject_level_GFR = function(ind){
dens_quant_country_ind =lapply(years, function(year){
country = countries[ind]
data_density(country,year)
})
qin = t(sapply(1:length(years), function(year){
dens_quant_country_ind[[year]]$quant
}))
dSup =  t(sapply(1:length(years), function(year){
dens_quant_country_ind[[year]]$dens$x
}))
dSup_mean = colMeans(dSup)
xin = (years - yearStart)/ (yearEnd - yearStart)
obj_fit = frechet::GloDenReg(xin = xin, qin = qin, xout = c(0,1),
optns = list(qSup = seq(0,1,length.out = 500),
dSup = dSup_mean,
lower = 72, upper = 120))$qout
qin = lapply(1:length(years), function(year){
dens_quant_country_ind[[year]]$quant
})
return(list(qin = qin, obj_fit = obj_fit, dSup_mean = dSup_mean))
}
dSup_mean = colMeans(t(sapply(1:n, function(ind){
second_step_resp[[ind]]$dSup_mean
})))
rm(list = ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
###################
###################
## Load the necessary files from above
load("../data/second_step_resp.Rda")
df = read.csv("../data/lt_subset.csv",header = TRUE)
Z = read.csv("../data/covariate_1991.csv",header = TRUE)
####### loading the observed data -- quantiles and densities
load("../data/obs_dens_quant.Rda")
countries = unique(df$Country)
yearStart = 1990
yearEnd = 2019
years = yearStart:yearEnd
n = length(countries)
samp_ind_tr = sample(1:n, n/2, replace = FALSE)
qin_tr = lapply(samp_ind_tr, function(ind){
lapply(1:length(years), function(j){
obs[[ind]][[j]]$quant
})
})
length(years)
qin_tr = lapply(samp_ind_tr, function(ind){
lapply(1:length(years), function(j){
obs[[j]][[ind]]$quant
})
})
dat_Z_tr =  Z[samp_ind_tr,]
dat_Z_tst =  Z[((1:n)[-samp_ind_tr]),]
dSup_mean = colMeans(t(sapply(1:n, function(ind){
second_step_resp[[ind]]$dSup_mean
})))
xin = (years - yearStart)/ (yearEnd - yearStart)
str(qin_tr)
############
##function to fit the subject level (first step) Global Fr Regression to compute the random effects at the end points of the time domain
subject_level_GFR = function(ind){
dens_quant_country_ind =lapply(years, function(year){
country = countries[ind]
data_density(country,year)
})
qin = t(sapply(1:length(years), function(year){
dens_quant_country_ind[[year]]$quant
}))
dSup =  t(sapply(1:length(years), function(year){
dens_quant_country_ind[[year]]$dens$x
}))
dSup_mean = colMeans(dSup)
xin = (years - yearStart)/ (yearEnd - yearStart)
obj_fit = frechet::GloDenReg(xin = xin, qin = qin, xout = c(0,1),
optns = list(qSup = seq(0,1,length.out = 500),
dSup = dSup_mean,
lower = 72, upper = 120))$qout
return(list(qin = qin, obj_fit = obj_fit, dSup_mean = dSup_mean))
}
second_step_resp = lapply(samp_ind_tr, function(ind){
subject_level_GFR = subject_level_GFR(ind)
qin = subject_level_GFR$qin
dSup_mean = subject_level_GFR$dSup_mean
obj_fit_ind = subject_level_GFR$obj_fit
mi_hat0 = obj_fit_ind[1,]
mi_hat1 = obj_fit_ind[2,]
return(list(qin = qin, mi_hat0 = mi_hat0, mi_hat1 = mi_hat1, dSup_mean = dSup_mean))
})
############
##function to produce density and quantile for each country and at each year
data_density <- function(country,year){
data_sub = subset(df, (Year == year) & (Country == country))
lx_year <- as.numeric(as.vector(data_sub$lx))
binY <- seq(75,110,length.out = length(lx_year)+1)
density <- frechet::CreateDensity(freq = lx_year,  bin=binY,
optns = list(nRegGrid = 500))
quantile <- fdadensity::dens2quantile(dens = density$y, dSup = density$x,
qSup = seq(0,1,length.out = 500))
return(list(dens = density, quant = quantile))
}
second_step_resp = lapply(samp_ind_tr, function(ind){
subject_level_GFR = subject_level_GFR(ind)
qin = subject_level_GFR$qin
dSup_mean = subject_level_GFR$dSup_mean
obj_fit_ind = subject_level_GFR$obj_fit
mi_hat0 = obj_fit_ind[1,]
mi_hat1 = obj_fit_ind[2,]
return(list(qin = qin, mi_hat0 = mi_hat0, mi_hat1 = mi_hat1, dSup_mean = dSup_mean))
})
second_step_resp0 = t(sapply(samp_ind_tr, function(ind){ ###first step estimate of random effects at time 0 -- quantile representation
second_step_resp[[ind]]$mi_hat0
}))
str(second_step_resp)
samp_ind_tr
second_step_resp0 = t(sapply(1:(n/2), function(ind){ ###first step estimate of random effects at time 0 -- quantile representation
second_step_resp[[ind]]$mi_hat0
}))
second_step_resp1 = t(sapply(1:(n/2), function(ind){ ###first step estimate of random effects at time 1 -- quantile representation
second_step_resp[[ind]]$mi_hat1
}))
qSup = seq(0, 1, length.out = 500)#support of quantile function
second_step_gfr_fit0 = frechet::GloDenReg(xin = dat_Z_tr,
qin = second_step_resp0,
xout = dat_Z_tst,
optns = list(qSup = qSup, ndSup = 500))
dat_Z_tr
second_step_gfr_fit0 = frechet::GloDenReg(xin = as.matrix(dat_Z_tr),
qin = second_step_resp0,
xout = as.matrix(dat_Z_tst),
optns = list(qSup = qSup, ndSup = 500))
second_step_gfr_fit1 = frechet::GloDenReg(xin =  as.matrix(dat_Z_tr),
qin = second_step_resp1,
xout = as.matrix(dat_Z_tst),
optns = list(qSup = qSup, ndSup = 500))
ni = length(years)
Ti = (years -  years[1])/(years[length(years)] - years[1]) ##standarized time domain
Ti
str(second_step_gfr_fit0)
str(second_step_gfr_fit0$qout)
ni
qout =  t(sapply(1:ni, function(j){
q_geo(Ti[j], second_step_gfr_fit0$qout[ind,], second_step_gfr_fit1$qout[ind,])
}))
q_geo = function(t,A,B){ ##any point on the geodesic
t*A + (1-t)*B
}
qout =  t(sapply(1:ni, function(j){
q_geo(Ti[j], second_step_gfr_fit0$qout[ind,], second_step_gfr_fit1$qout[ind,])
}))
as.matrix(dat_Z_tst)
nrow(as.matrix(dat_Z_tst))
qout =  lapply(1:nrow(as.matrix(dat_Z_tst)), function(ind){
out = t(sapply(1:ni, function(j){
q_geo(Ti[j], second_step_gfr_fit0$qout[ind,], second_step_gfr_fit1$qout[ind,])
}))
})
str(qout)
qout =  lapply(1:nrow(as.matrix(dat_Z_tst)), function(ind){
out = lapply(1:ni, function(j){
q_geo(Ti[j], second_step_gfr_fit0$qout[ind,], second_step_gfr_fit1$qout[ind,])
})
})
str(qout)
qin_tst = lapply(((1:n)[-samp_ind_tr]), function(ind){
lapply(1:length(years), function(j){
obs[[ind]][[j]]$quant
})
})
qin_tst = lapply(((1:n)[-samp_ind_tr]), function(ind){
lapply(1:length(years), function(j){
obs[[j]][[ind]]$quant
})
})
str(qin_tst)
length(qin_tst)
length(qin_tst[[1]])
length(qout[[1]])
length(qout)
nrow(dat_test$Z)
str(qin_tst[[1]][[1]])
rmpe_test = mean(sapply(1:length(qin_tst), function(ind){
mean(sapply(1:ni, function(j){
sum((qin_tst[[ind]][[j]] - qout[[ind]][[j]])^2)*diff(qSup)[1]
}))
}))
rmpe_test
ind = j =1
sum((qin_tst[[ind]][[j]] - qout[[ind]][[j]])^2)*diff(qSup)[1]
mean(sapply(1:ni, function(j){
sum((qin_tst[[ind]][[j]] - qout[[ind]][[j]])^2)*diff(qSup)[1]
}))
sapply(1:ni, function(j){
sum((qin_tst[[ind]][[j]] - qout[[ind]][[j]])^2)*diff(qSup)[1]
})
rmpe_test = mean(sapply(1:length(qin_tst), function(ind){
mean(sapply(1:ni, function(j){
mean((qin_tst[[ind]][[j]] - qout[[ind]][[j]])^2)*diff(qSup)[1]
}))
}))
rmpe_test
